dat: BlogSystem
type: Extra

VB: BLOG_PORT: "3000"
VB: BLOG_HOST: "localhost"
VB: API_BASE: "/api/"

console.log: "BlogSystem Package is initializing..."

# Create all necessary folders
addFolder: "public"
addFolder: "public/css"
addFolder: "public/js"
addFolder: "public/admin"

console.log: "Folder structure created"

# Create and populate HTML files
addFile: "public/index.html"
editFile: "public/index.html"
{
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Blog</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="css/blog.css">
</head>
<body class="bg-gray-100 min-h-screen">
    <header class="bg-blue-600 text-white p-6">
        <div class="container mx-auto">
            <h1 class="text-3xl font-bold">My Blog</h1>
            <nav class="mt-4">
                <a href="/" class="mr-4 hover:underline">Home</a>
                <a href="/admin.html" class="mr-4 hover:underline">Admin</a>
            </nav>
        </div>
    </header>
    
    <main class="container mx-auto p-6">
        <div id="blog-posts" class="space-y-6">
            <div class="text-center text-gray-500">
                <p>Loading blog posts...</p>
            </div>
        </div>
    </main>
    
    <footer class="bg-gray-800 text-white p-6 mt-12">
        <div class="container mx-auto text-center">
            <p>&copy; 2025 My Blog - Powered by Tontoo</p>
        </div>
    </footer>
    
    <script src="js/blog.js"></script>
</body>
</html>
}

addFile: "public/admin.html"
editFile: "public/admin.html"
{
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="css/blog.css">
</head>
<body class="bg-gray-100 min-h-screen">
    <header class="bg-red-600 text-white p-6">
        <div class="container mx-auto">
            <h1 class="text-3xl font-bold">Blog Administration</h1>
            <nav class="mt-4">
                <a href="/" class="mr-4 hover:underline">Back to Blog</a>
            </nav>
        </div>
    </header>
    
    <main class="container mx-auto p-6">
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <h2 class="text-2xl font-bold mb-4">Create New Blog Post</h2>
            
            <div id="login-section" class="mb-6">
                <h3 class="text-lg font-semibold mb-3">Please Login First</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <input type="text" id="username" placeholder="Username" class="p-3 border rounded-lg">
                    <input type="password" id="password" placeholder="Password" class="p-3 border rounded-lg">
                </div>
                <button onclick="login()" class="mt-3 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                    Login
                </button>
            </div>
            
            <div id="post-form" style="display: none;">
                <div class="space-y-4">
                    <input type="text" id="post-title" placeholder="Blog Post Title" class="w-full p-3 border rounded-lg">
                    <textarea id="post-content" placeholder="Blog Post Content" rows="10" class="w-full p-3 border rounded-lg"></textarea>
                    <input type="text" id="post-author" placeholder="Author" class="w-full p-3 border rounded-lg">
                    <button onclick="createPost()" class="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700">
                        Publish Post
                    </button>
                </div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-2xl font-bold mb-4">Manage All Posts</h2>
            <div id="admin-posts" class="space-y-4">
                <div class="text-center text-gray-500">
                    <p>Loading posts...</p>
                </div>
            </div>
        </div>
    </main>
    
    <script src="js/admin.js"></script>
</body>
</html>
}

# Create CSS file
addFile: "public/css/blog.css"
editFile: "public/css/blog.css"
{
/* Blog Custom Styles */
.blog-post {
    transition: transform 0.2s, box-shadow 0.2s;
}

.blog-post:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
}

.blog-meta {
    font-size: 0.9rem;
    color: #6b7280;
}

.blog-content {
    line-height: 1.7;
}

.admin-controls {
    border-top: 1px solid #e5e7eb;
    padding-top: 1rem;
    margin-top: 1rem;
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.fade-in {
    animation: fadeIn 0.5s ease-out;
}

/* Loading spinner */
.loading {
    border: 2px solid #f3f3f3;
    border-top: 2px solid #3498db;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    animation: spin 1s linear infinite;
    display: inline-block;
    margin-right: 10px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
}

# Create JavaScript for blog frontend
addFile: "public/js/blog.js"
editFile: "public/js/blog.js"
{
// Blog Frontend JavaScript
document.addEventListener('DOMContentLoaded', function() {
    loadBlogPosts();
});

function loadBlogPosts() {
    fetch('/api/blog/posts/')
        .then(response => response.json())
        .then(posts => {
            const container = document.getElementById('blog-posts');
            container.innerHTML = '';
            
            if (Array.isArray(posts) && posts.length > 0) {
                // Sort posts by ID (newest first)
                posts.sort((a, b) => b.id - a.id);
                
                posts.forEach(post => {
                    const postElement = document.createElement('div');
                    postElement.className = 'blog-post bg-white rounded-lg shadow-md p-6 fade-in';
                    
                    const date = new Date(post.created_at).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });
                    
                    postElement.innerHTML = `
                        <h2 class="text-2xl font-bold text-gray-800 mb-2">${escapeHtml(post.title)}</h2>
                        <div class="blog-meta mb-4">
                            <span>By ${escapeHtml(post.author || 'Unknown')}</span> | 
                            <span>${date}</span>
                        </div>
                        <div class="blog-content text-gray-700">${escapeHtml(post.content)}</div>
                    `;
                    
                    container.appendChild(postElement);
                });
            } else {
                container.innerHTML = `
                    <div class="text-center text-gray-500 py-12">
                        <h3 class="text-xl font-semibold mb-2">No blog posts yet</h3>
                        <p>Create your first post in the <a href="/admin.html" class="text-blue-600 hover:underline">Admin Panel</a>!</p>
                    </div>
                `;
            }
        })
        .catch(error => {
            console.error('Error loading posts:', error);
            document.getElementById('blog-posts').innerHTML = `
                <div class="text-center text-red-500">
                    <p>Error loading blog posts. Please try again later.</p>
                </div>
            `;
        });
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}
}

# Create JavaScript for admin panel
addFile: "public/js/admin.js"
editFile: "public/js/admin.js"
{
// Blog Admin JavaScript
let isLoggedIn = false;

document.addEventListener('DOMContentLoaded', function() {
    loadAllPosts();
});

function login() {
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;
    
    if (!username || !password) {
        alert('Please enter username and password');
        return;
    }
    
    // Simple login simulation
    const loginData = new URLSearchParams();
    loginData.append('username', username);
    loginData.append('password', password);
    
    fetch('/login', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: loginData
    })
    .then(response => {
        if (response.ok) {
            isLoggedIn = true;
            document.getElementById('login-section').style.display = 'none';
            document.getElementById('post-form').style.display = 'block';
            showMessage('Successfully logged in!', 'success');
        } else {
            showMessage('Login failed. Please check your credentials.', 'error');
        }
    })
    .catch(error => {
        console.error('Login error:', error);
        showMessage('Login error. Please try again.', 'error');
    });
}

function createPost() {
    const title = document.getElementById('post-title').value;
    const content = document.getElementById('post-content').value;
    const author = document.getElementById('post-author').value;
    
    if (!title || !content) {
        showMessage('Please fill in title and content', 'error');
        return;
    }
    
    const postData = {
        title: title,
        content: content,
        author: author || 'Unknown',
        created_at: new Date().toISOString()
    };
    
    fetch('/api/blog/posts/', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(postData)
    })
    .then(response => response.json())
    .then(result => {
        showMessage('Post created successfully!', 'success');
        // Reset form
        document.getElementById('post-title').value = '';
        document.getElementById('post-content').value = '';
        document.getElementById('post-author').value = '';
        // Reload posts
        loadAllPosts();
    })
    .catch(error => {
        console.error('Error creating post:', error);
        showMessage('Error creating post. Please try again.', 'error');
    });
}

function loadAllPosts() {
    fetch('/api/blog/posts/')
        .then(response => response.json())
        .then(posts => {
            const container = document.getElementById('admin-posts');
            container.innerHTML = '';
            
            if (Array.isArray(posts) && posts.length > 0) {
                posts.sort((a, b) => b.id - a.id);
                
                posts.forEach(post => {
                    const postElement = document.createElement('div');
                    postElement.className = 'border rounded-lg p-4 bg-gray-50';
                    
                    const date = new Date(post.created_at).toLocaleDateString('en-US');
                    
                    postElement.innerHTML = `
                        <div class="flex justify-between items-start">
                            <div class="flex-1">
                                <h4 class="font-semibold">${escapeHtml(post.title)}</h4>
                                <p class="text-sm text-gray-600">By ${escapeHtml(post.author || 'Unknown')} | ${date}</p>
                                <p class="text-sm text-gray-700 mt-2">${escapeHtml(post.content.substring(0, 150))}${post.content.length > 150 ? '...' : ''}</p>
                            </div>
                            <div class="ml-4">
                                <button onclick="deletePost(${post.id})" class="px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600">
                                    Delete
                                </button>
                            </div>
                        </div>
                    `;
                    
                    container.appendChild(postElement);
                });
            } else {
                container.innerHTML = '<p class="text-center text-gray-500">No posts available</p>';
            }
        })
        .catch(error => {
            console.error('Error loading posts:', error);
            document.getElementById('admin-posts').innerHTML = '<p class="text-center text-red-500">Error loading posts</p>';
        });
}

function deletePost(postId) {
    if (confirm('Are you sure you want to delete this post?')) {
        fetch(`/api/blog/posts/${postId}`, {
            method: 'DELETE'
        })
        .then(response => {
            if (response.ok) {
                showMessage('Post deleted successfully', 'success');
                loadAllPosts();
            } else {
                showMessage('Error deleting post', 'error');
            }
        })
        .catch(error => {
            console.error('Error deleting post:', error);
            showMessage('Error deleting post', 'error');
        });
    }
}

function showMessage(message, type) {
    // Create a simple notification
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg text-white z-50 ${type === 'success' ? 'bg-green-500' : 'bg-red-500'}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        document.body.removeChild(notification);
    }, 3000);
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}
}

# Create JSON data files
addFile: "blog_posts.json"
editFile: "blog_posts.json"
{
[
  {
    "id": 1,
    "title": "Welcome to My Blog!",
    "content": "This is the first post in this blog system. Here you can share all your thoughts and ideas. This system is built entirely with Tontoo and provides a simple yet powerful blogging platform. You can create, edit, and manage your posts through the admin panel. The system supports user authentication, responsive design, and a clean, modern interface.",
    "author": "Admin",
    "created_at": "2025-08-10T12:00:00Z"
  },
  {
    "id": 2,
    "title": "Getting Started with Tontoo Blog",
    "content": "This blog system demonstrates the power of Tontoo for creating web applications. With just a few lines of Tontoo code, we've created a full-featured blog with admin panel, user authentication, and a REST API. The system automatically creates all necessary files and starts a web server. Perfect for personal blogs, company news, or any content management needs.",
    "author": "System",
    "created_at": "2025-08-10T11:30:00Z"
  }
]
}

console.log: "HTML, CSS and JavaScript files created"

# Define blog API endpoints
webAPI: "getBlogPosts"
{
  "type": "get",
  "data": "blog_posts.json",
  "user": "false",
  "webserverid": "blogserver",
  "line": "/blog/posts/"
}

webAPI: "createBlogPost"
{
  "type": "post",
  "data": "blog_posts.json",
  "user": "true",
  "webserverid": "blogserver",
  "line": "/blog/posts/"
}

webAPI: "getSingleBlogPost"
{
  "type": "get",
  "data": "blog_posts.json",
  "user": "false",
  "webserverid": "blogserver",
  "line": "/blog/posts/$ID"
}

webAPI: "deleteBlogPost"
{
  "type": "delete",
  "data": "blog_posts.json",
  "user": "true",
  "webserverid": "blogserver",
  "line": "/blog/posts/$ID"
}

console.log: "Blog APIs configured"

# Start web server (without HTTPS)
startWEB: /public/
{
  "port": "$BLOG_PORT",
  "host": "$BLOG_HOST",
  "id": "blogserver",
  "404": "404.html",
  "landing": "index.html",
  "ssl": "false",
  "api": "$API_BASE",
  "user": "true"
}

console.log: "Blog system started at http://$BLOG_HOST:$BLOG_PORT"
console.log: "Admin panel available at: http://$BLOG_HOST:$BLOG_PORT/admin.html"
console.log: "Default login: admin / password"
